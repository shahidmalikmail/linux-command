 51  git init  === Start Git like monitoring 
   52  git status
   10 git config --global user.name "Shahid Malik"
   11  git config --global user.email "shahidmalik.mail@gmail.com"
   53  git add --a  === For add all files to git.
   54  git status
   55  git log
   56  git commit -m "my first commit"
   59  git add tensorflow/
   60  git status
   61  git commit -m "Amiga Website"
   65  git commit -a   ===== Commit all files
   13. git clone https://github.com/tensorflow/tensorflow.git ===  Clone the Reposistory
  13. git clone https://github.com/tensorflow/tensorflow.git shahid ==== Clone will be renamed as shahid 
########################################################################################   
15.   touch error.log   == We can add file and folder name for ignore the git.
   83  touch .gitignore
    96  git add .  ==== Add all files or folder in Git
   139  git diff  ====  Diffrence between same file like one file in added and another is not added.
  146  git diff --staged   ====Diffrence between stage and current code.
  162  git commit -a -m "Updated code" ===== Git add and Commit both on same time but it will never add new files to commit.
   173  git rm --cached Domestic.xlsx  ===== File removed from tracker
  #############################################################################################################
  git log   ==== Show all logs with log code
  272  git log -p ===== Print all the log details like changies etc.
  278  git log -p -2  ==== Print only last 2 log details.
  280  git log -p -1
  281  git log --stat  =====     Print all logs details like how many lince removed and how many lines added and modified.
  282  git log --stat -2  =====  Print last 2 logs like above.
  284  git log --stat -1  ======
  285  git log --stat -2
  287  git log --pretty=oneline   ===== Show the all details in one line.
   290  git log --pretty=short
  291  git log --pretty=full
   295  git log --since=2.day ==== show the log details last 2 days.
  296  git log --since=1 day
  297  git log --since=1.day
  298  git log --since=2.week
  299  git log --since=2.months
  302  git commit --amend  ===== Changies and new file added in last commit .
  309  git log -p -1
##################################################################################################################

git restore --staged Abhinay.txt   ======== For back file from Stage Aeria 
 git checkout -f  ==== Restore all repo from last commit
git checkout Shahid.txt  ===== Restore one file from last commit.
git restore Shahid.txt   =====  Restore one file or two files from last commit.
################################################################################################################
 git remote add origin https://github.com/shahidmalikmail/mailserver.git   ==== For add git reposistory
git remote  == Check the remote 
git remote -v === check the remote for push and pull
git push -u origin master   ==== Push the data in to remote repo.
git pull   ==== upto date Repo from Git Server  
######################################################################################################################
git config --global alias.st status   === for make the Alias
git config --global alias.shahid add   ==== for make the Alias only for short cut
###################################################################################################
 428  git branch   ===== Show the Git All Branches and Makred Star is current branch
  429  git checkout -b development  ==== To Create the New Branch like Development.
    440  git checkout master  ===== To Change the working branch.
  442  git checkout development ===== To Change the working branch. We can see all data of that Branch where we switched.
########################################################################################################################
git merge development (Branch-Name) ===  To Merge the any branch but make you are in Master Branch for merge any Branch.





